global !p
from snippethelpers import *
endglobal

snippet post "blog post"
+++
author = "Raghu Rajagopalan"
date = "`!p if not snip.c: snip.rv=rfc3339()`"
draft = false
title = "${1:title}"
tags = ["${2:untagged}"]
+++

:icons: font
:linkattrs:
:experimental:

$0
endsnippet

snippet Title "Document title"
= ${0:Heading text}
endsnippet

snippet heading2 "heading 2"
== ${0:Heading text}
endsnippet

snippet heading3 "heading 3"
=== ${0:Heading text}
endsnippet

snippet heading4 "heading 4"
==== ${0:Heading text}
endsnippet

snippet heading5 "heading 5"
===== ${0:Heading text}
endsnippet

snippet heading6 "heading 6"
====== ${0:Heading text}
endsnippet

snippet link "link"
${1:url}[${2:alt}^]
endsnippet

snippet checkbox "checkbox"
[ ] $0
endsnippet
snippet checkbox-checked "checkbox - checked"
[x] $0
endsnippet

snippet checklist-num "Checklist - numbered"
. [ ] Item 1
. [ ] Item 2
. [x] Item 3
endsnippet

snippet checklist-bulleted "Checklist - bulleted"
* [ ] Item 1
* [ ] Item 2
* [x] Item 3
endsnippet

snippet strike "strike out text"
[.line-through]#${0:Your text goes here}#
endsnippet

snippet underline "underline text"
[.underline]#${0:Your text goes here}#
endsnippet

snippet highlight "highlight text"
#${0:Your text goes here}#
endsnippet

snippet horizontal-rule "horizontal rule"

'''

$0
endsnippet

snippet img "image - block"
[.center.text-center]
image::${1:url}[${2:alt,width,height}]
endsnippet

snippet img-title "image - block with title"
.Title
[.center.text-center]
image::${1:url}[${2:alt}]
endsnippet

snippet imgi "image- inline"
image:$1[${2:alt,width,height,role="right text-center"}]
endsnippet

snippet listb "list - bulleted"

* Item 1
** sublist
* Item 2

endsnippet

snippet listn "list - numbered"

. this is item 1
.. nested item
+
	complex content
. this is item2

endsnippet

snippet listl "list - labeled"

label::
. this is item 1
.. nested item
another label::
. item

endsnippet

snippet source "sourcecode" b
[source,${1:lang}]
----
$0
----
endsnippet

snippet qanda "Q&A" b
[qanda]
${1:What is Asciidoctor?}::
	An implementation of the AsciiDoc processor in Ruby.
endsnippet

snippet sidebar "sidebar"
.${1:title}
****
$0
****
endsnippet

snippet tip "admonition block" b

[${1:NOTE|TIP|IMPORTANT|WARNING|CAUTION}]
${2:.Title}
====
$0
====

endsnippet

snippet quote "quote" b

[quote,${1:author,reference}]
${2:quote}
endsnippet

snippet embed "embed"

++++
$0
++++
endsnippet

snippet key "keyboard shortcut"
kbd:[${0:Ctrl + Shift + +}]
endsnippet

snippet menu "menu selection"
menu:View[Zoom > Reset]
endsnippet

snippet button "button selection"
btn:[Ok]
endsnippet

snippet icon "fa icons"
icon:tags[${1:2x,3x,4x,5x,lg,fw, role="color", flip="horizontal|vertial", rotate="90,180,270"}]
endsnippet
